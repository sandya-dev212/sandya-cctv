<?php$base = $base ?? '';$g    = $g ?? '';$k    = $k ?? '';$mon  = $mon ?? '';$cam  = $cam ?? '';?><link rel="stylesheet" href="https://unpkg.com/flatpickr/dist/flatpickr.min.css"><style>.toolbar{display:flex;gap:8px;align-items:center;flex-wrap:wrap;margin:10px 0 16px}input,button{padding:8px 10px;border-radius:10px;border:1px solid #303a52;background:#0f1420;color:#e5e7eb}button{background:#7c3aed;border:none;font-weight:700;cursor:pointer}.table{width:100%;border-collapse:collapse}.table th,.table td{padding:10px;border-bottom:1px solid #1f2937;text-align:left}.table th{cursor:pointer}.badge{display:inline-block;padding:4px 8px;border-radius:8px;background:#111827}</style><div class="container">  <h2 style="margin:14px 0 6px">Videos</h2>  <div class="toolbar">    <input id="base" placeholder="Shinobi Base URL" value="<?= esc($base) ?>" style="min-width:320px">    <input id="g" placeholder="Group Key" value="<?= esc($g) ?>">    <input id="k" placeholder="API Key" value="<?= esc($k) ?>">    <input id="mon" placeholder="Monitor ID" value="<?= esc($mon) ?>">    <input id="cam" placeholder="Camera (label)" value="<?= esc($cam) ?>">  </div>  <div class="toolbar">    <label>Start</label><input id="start" style="min-width:210px">    <label>End</label><input id="end" style="min-width:210px">    <button id="apply">Apply</button>  </div>  <table class="table" id="tbl">    <thead>      <tr>        <th data-k="start">Waktu</th>        <th data-k="duration">Dur (s)</th>        <th data-k="size">Size</th>        <th>Aksi</th>      </tr>    </thead>    <tbody></tbody>  </table></div><script src="https://unpkg.com/flatpickr"></script><script>const qs=s=>document.querySelector(s); const qsa=s=>Array.from(document.querySelectorAll(s));flatpickr("#start",{enableTime:true,dateFormat:"Y-m-d H:i:S",defaultDate:new Date(Date.now()-3*24*3600*1000)});flatpickr("#end",{enableTime:true,dateFormat:"Y-m-d H:i:S",defaultDate:new Date()});let sortKey='start', sortDir='desc', dataRows=[];function toEpochMs(s){ return Date.parse(s); }function loadData(){  const base=qs('#base').value.trim(), g=qs('#g').value.trim(), k=qs('#k').value.trim();  const mon=qs('#mon').value.trim(), start=toEpochMs(qs('#start').value), end=toEpochMs(qs('#end').value);  if(!base||!g||!k||!mon){ alert('Base/G/K/Mon wajib'); return; }  const p=new URLSearchParams({base,g,k,mon,start,end});  fetch('/videos/data?'+p.toString())    .then(r=>r.json())    .then(j=>{ dataRows=(j.data||[]); render(); })    .catch(()=>{ dataRows=[]; render(); });}function render(){  const tb=qs('#tbl tbody'); tb.innerHTML='';  dataRows.sort((a,b)=>{    if(sortKey==='start') return (sortDir==='asc' ? a.start_ts-b.start_ts : b.start_ts-a.start_ts);    if(sortKey==='duration') return (sortDir==='asc' ? (a.duration||0)-(b.duration||0) : (b.duration||0)-(a.duration||0));    if(sortKey==='size') return (sortDir==='asc' ? (''+(a.size||'')).localeCompare(b.size||'') : (''+(b.size||'')).localeCompare(a.size||''));    return 0;  });  const cam = qs('#cam').value.trim();  for(const r of dataRows){    const tr=document.createElement('tr');    tr.innerHTML = `      <td>${cam?`<span class="badge">${cam}</span> `:''}${r.start_str}</td>      <td>${r.duration??''}</td>      <td>${r.size??''}</td>      <td>        <a href="${r.play}" target="_blank">Play</a> |        <a href="${r.download}" download>Download</a>      </td>`;    tb.appendChild(tr);  }}qsa('#tbl th[data-k]').forEach(th=>{  th.addEventListener('click',()=>{    const k=th.getAttribute('data-k');    if(sortKey===k) sortDir=(sortDir==='asc'?'desc':'asc'); else {sortKey=k; sortDir='asc';}    render();  });});qs('#apply').addEventListener('click', loadData);window.addEventListener('DOMContentLoaded', loadData);</script>